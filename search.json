[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Test Website",
    "section": "",
    "text": "This is a Quarto website.\nTo learn more about Quarto websites visit https://quarto.org/docs/websites."
  },
  {
    "objectID": "index.html#chapters",
    "href": "index.html#chapters",
    "title": "Test Website",
    "section": "Chapters",
    "text": "Chapters\n\n\n\nChapters\nURLs\n\n\n\n\nChapter 1\nChapter 1\n\n\nChapter 2\nChapter 2"
  },
  {
    "objectID": "chapters/chapter1/online_chapter1.html",
    "href": "chapters/chapter1/online_chapter1.html",
    "title": "Chapter 1: What is Orleans",
    "section": "",
    "text": "What is Orleans\nOrleans is a virtul actor framework. It is a framework for building distributed, high-scale computing applications, without the need to learn and apply complex concurrency or other scaling patterns. It was created by Microsoft Research and designed for use in the cloud."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n\n\n\n\n\nNote\n\n\n\nNote this website is for testing GitHub Pages action auto deploy GitHub Pages with Quarto.\nDo not believe anything you read here."
  },
  {
    "objectID": "chapters/chapter2/online_chapter2.html",
    "href": "chapters/chapter2/online_chapter2.html",
    "title": "Chapter 2: What is Actor Model?",
    "section": "",
    "text": "Actor model is a mathematical model of concurrent computation. It treats “actors” as the universal primitives of concurrent computation. In response to a message that it receives, an actor can: make local decisions, create more actors, send more messages, and determine how to respond to the next message received."
  }
]